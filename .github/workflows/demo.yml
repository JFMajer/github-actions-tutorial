name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    env:
      TEST_VARIABLE: ${{ secrets.SECRET1 }}}
    runs-on: ubuntu-latest
    steps:
      - name: output test variable
        run: echo $TEST_VARIABLE
      - name: Get code
        uses: actions/checkout@v3
      - name: cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}}      
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test results
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
          retention-days: 1
  build:
    if: ${{ !failure() }}
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
      some-other-output: ${{ steps.publish-url.outputs.some-other-output }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: publish js filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: publish random url
        id: publish-url
        run: echo "some-other-output=https://example.com" >> $GITHUB_OUTPUT
      - name: tar dist directory
        run: tar -czf dist.tar.gz dist
      - name: list files
        run: ls -la
      - name: Upload dist tarball
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist.tar.gz
          retention-days: 1
  deploy:
    if: ${{ !failure() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Deploying..."
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: list files
        run: ls -la
      - name: list files in tar archive
        run: tar -tzf build/dist.tar.gz
      - name: extract tar archive
        run: tar -xzf build/dist.tar.gz -C build
      - name: list files
        run: ls -la & ls -la build & ls -la build/dist
      - name: output filename
        run: echo ${{ needs.build.outputs.script-file }}
      - name: output some other output
        run: echo ${{ needs.build.outputs.some-other-output }}
  report:
    needs: [deploy]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: output
        run: | 
          echo "some jobs have failed"
          echo: ${{ toJSON(github) }}
